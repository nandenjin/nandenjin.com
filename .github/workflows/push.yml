name: CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Fetch contents
        run: yarn content

      - name: Get commit id of content repo
        id: content-commit-id
        run: echo "::set-output name=id::$(git log -n 1 --pretty=format:'%H')"
        working-directory: content

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: node_modules/.cache/builder-module
          key: builder-${{ steps.content-commit-id.outputs.id }}

      - name: Build
        run: yarn generate

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'tags/v')

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Fetch contents
        run: yarn content

      - name: Get commit id of content repo
        id: content-commit-id
        run: echo "::set-output name=id::$(git log -n 1 --pretty=format:'%H')"
        working-directory: content

      - name: Cache build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: node_modules/.cache/builder-module
          key: builder-${{ steps.content-commit-id.outputs.id }}

      - name: Build
        run: yarn generate

      - name: Deploy
        run: yarn run deploy --token=${{ secrets.FIREBASE_TOKEN }}
